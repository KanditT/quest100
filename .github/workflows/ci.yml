name: CI
on:
  pull_request:
  push:
    branches: [ main ]
jobs:
  scan_ruby:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager
  scan_js:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: bin/importmap audit
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Lint code for consistent style
        run: bin/rubocop -f github
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential git libpq-dev libyaml-dev pkg-config google-chrome-stable
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      
      # Clear Bootsnap cache to avoid loading issues
      - name: Clear cache directories
        run: |
          rm -rf tmp/cache/bootsnap*
          mkdir -p tmp/cache
          mkdir -p tmp/screenshots
      
      # Use more reliable database setup
      - name: Setup test database
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/quest100_test
        run: |
          bin/rails db:create
          bin/rails db:migrate
      
      # Run original Rails tests
      - name: Run Rails tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/quest100_test
        run: bin/rails test test:system
      
      # Run RSpec tests (if you have them)
      - name: Run RSpec tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/quest100_test
        run: bundle exec rspec
        continue-on-error: true  # Allow other tests to run even if RSpec fails
      
      # Run Cucumber tests (if you have them)
      - name: Run Cucumber tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/quest100_test
        run: bundle exec cucumber
        continue-on-error: true  # Allow other tests to run even if Cucumber fails
      
      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore
